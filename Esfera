class Pacman {
  
  Body pac;
  float r;
  color col;
  float s;
  float posX;
  float posY;
  
  Pacman(float x, float y, float r_, float s_) {
    r = r_;
    s = s_;
    makeBody(x, y, r, s);
    pac.setUserData(this);
    col = color(255,255,0);
    posX = x;
    posY = y;
  }
  
  void killBody() {
    box2d.destroyBody(pac);
  }
  
  // Cambia la velocidad del Pac
  void change() {
    s =+ 1;
  }
  
  /*boolean done() {
    Vec2 pos = box2d.getBodyPixelCoord(pac);
    
  }*/
  
  void display() {
    Vec2 pos = box2d.getBodyPixelCoord(pac);
    pushMatrix();
    translate(pos.x, pos.y);
    fill(col);
    noStroke();
    ellipse(0, 0, r*2, r*2);
    popMatrix();
    
  }
  
  /*void move(){
    if (keyCode == UP){
      posY = posY - s;
    } else if (keyCode == DOWN){
      posY = posY + s;
    } else if (keyCode == RIGHT){
      posX = posX + s;
    } else if (keyCode == LEFT){
      posX = posX - s;
    }
  }*/
  
  void makeBody(float x, float y, float r, float s) {
    // Define un objeto
    BodyDef bd = new BodyDef();
    // Establecer posicion
    bd.position = box2d.coordPixelsToWorld(x, y);
    bd.type = BodyType.DYNAMIC;
    pac = box2d.createBody(bd);

    // Hace una figura circular
    CircleShape cs = new CircleShape();
    cs.m_radius = box2d.scalarPixelsToWorld(r);

    FixtureDef fd = new FixtureDef();
    fd.shape = cs;
    // Parametros que afectan a la fisica
    
    fd.density = 1;
    fd.friction = 0.01;
    fd.restitution = 0.3;

    // Attach fixture to body
    pac.createFixture(fd);
    pac.setAngularVelocity(random(-10, 10));
  }
  
}
